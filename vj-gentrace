#!/usr/bin/env python3

import argparse
import re

parser = argparse.ArgumentParser(description='Generate a pseudorandom trace for the verinject file driver')

parser.add_argument('mapfile', type=argparse.FileType('r'), help="The .map file generated by verinject")
parser.add_argument('--include', nargs='*', type=re.compile, help="If specified a signal must match at least against one of these regexes to be included in the random distribution")
parser.add_argument('--exclude', nargs='*', type=re.compile, help="If specified a signal must can't match any of these regexes to be included in the random distribution")
parser.add_argument('--seed', default=0, type=int, help="Seed for the random distribution")

args = parser.parse_args()

mappath = args.mapfile
ranges = list()
with open(mappath, 'r') as f:
    for line in f:
        line = line.strip()
        if len(line) < 3:
            continue
        spl = line.split(' ')
        if len(spl) < 9:
            continue
        rg = {
            "start": int(spl[0]),
            "end": int(spl[1]),
            "path": spl[2],
            "lword": int(spl[4]),
            "rword": int(spl[5]),
            "lmem": int(spl[6]),
            "rmem": int(spl[7]),
            "kind": spl[8]
        }
        rg["wmin"] = min(rg["lword"], rg["rword"])
        rg["wmax"] = max(rg["lword"], rg["rword"])
        rg["wlen"] = rg["wmax"] - rg["wmin"] + 1
        rg["mmin"] = min(rg["lmem"], rg["rmem"])
        rg["mmax"] = max(rg["lmem"], rg["rmem"])
        rg["mlen"] = rg["mmax"] - rg["mmin"] + 1
        ranges.append(rg)


